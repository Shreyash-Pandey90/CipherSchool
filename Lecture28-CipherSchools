import java.util.*;

public class Lecture28 
{
    
//  approach 1 ----------------------------->

    public static void Approach1(String S)
    {
        //int n=S.length();
        char arr1[]=new char[S.length()]; //creating 1st object
        for(int i=0;i<S.length();i++)
        {
            arr1[i]=S.charAt(S.length()-1-i);
        }
        //System.out.println(Arrays.toString(arr1));
        String rev =new String(arr1); //creating 2nd object
        System.out.println(rev);
    }

    // time complexity is O(n)  and space complexity is also O(n);


// Approach 2 ------------------------------->

public static void Approach2(String S)
{
    int n=S.length();
   String a="";
   for(int i=0;i<n;i++)
   {
    a=S.charAt(i)+a;   //here every time  we are creating  new object, so total we are creating n objects
   }
   System.out.println(a);

   // ttime complexiy O(n) and space is O(1)

   //but approach 1 is better than 2nd bcz there we are creating 3 objects only
}

// Approach 3 ------------------------------------>

public static void Approach3(String S)
{
    int left=0;
    int right=S.length()-1;
    char arr[]=S.toCharArray();
    while(left<right)
    {
        char temp=arr[right];
        arr[right]=arr[left];
        arr[left]=temp;
        left++;
        right--;   
    }
    String rev=new String(arr);
    System.out.println(rev);


    // time complexity O(n), space O(n), 

}
    public static void main(String args[])
    {
        String a="hello keep on working";
        Approach1(a);
        Approach2(a);
        Approach3(a);

         
    }
