class Heap{
    final int capacity=20;
    static int arr[]=new int[20];
    static int no=0;


    public static void add(int x)
    {
            arr[no++]=x;
            Minheapify();
        
    }

    public static void Minheapify()
    {
        int i=no-1;
        while(i>0 && arr[i]<arr[(i-1)/2])
        {
            int temp=arr[(i-1)/2];
            arr[(i-1)/2]=arr[i];
            arr[i]= temp; 
            i=(i-1)/2; 
        }
    }

    static boolean isEmpty()
    {
        return no==0;
    }

    static int peek()
    {
        if(!isEmpty())
        return arr[0];
        else return -1;
    }


    public static void printL()
    {

        for(int i=0;i<no;i++)
        {
            System.out.print(arr[i]+" ");
            
        }
    }
}

public class Lectuure55 
{
    public static void main(String args[])
    {
        Heap a=new Heap();
        System.out.println(a.isEmpty());
        a.add(60);
        a.add(40);
        a.add(70);
        a.add(10);
        a.add(50);
        a.add(40);
        a.add(20);
        a.add(30);
        a.add(60);
        System.out.println(a.isEmpty());
        System.out.println(a.peek());
        a.printL();
        a.add(8);
        System.out.println(a.peek());
        a.printL();

    }
}
/*
 *Heap is a complete binary tree
 */
